let src =
  // `03036732577212944063491565474664` // p2 84462026
  // `02935109699940807407585447034323` // p2 78725270
  // `03081770884921959731165446850517` // p2 53553731
  ``
  // p1 77038830 | p2 28135104
  .repeat(10000);
  //.split("").map(e=>+e);

const offset = +(src.slice(0, 7));

console.log('INPUT', src.length, offset, offset*2,
  'work beyond the initial dataset midpoint thus we need adding numbers up only');

let data = [...src.slice(offset)].map(e=>+e);

for (let i = 0; i < 100; i++) {
  data = fft2(data);
  console.log('PHASE', i+1, data.join('').slice(0,8));
}

console.log('ANSWER 16-2', data.join('').slice(0,8));

function fft2(data) {
  for (let i = data.length-1; i >= 0; i--) {
    data[i] = ((data[i+1] || 0) + data[i]) % 10;
  }
  return data;
}

console.log();
